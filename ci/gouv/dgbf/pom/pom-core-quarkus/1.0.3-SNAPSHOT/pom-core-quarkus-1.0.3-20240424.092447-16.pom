<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>ci.gouv.dgbf.pom</groupId>
		<artifactId>pom-core</artifactId>
		<version>1.0.3-SNAPSHOT</version>
	</parent>
	
	<artifactId>pom-core-quarkus</artifactId>
	<packaging>pom</packaging>
	
	<name>Pom noyau bas√© sur quarkus</name>
	
	<scm>
        <url>http://10.3.4.18:3001/christian/pom-core-quarkus.git</url>
        <connection>scm:git:http://10.3.4.18:3001/christian/pom-core-quarkus.git</connection>
        <developerConnection>scm:git:http://10.3.4.18:3001/christian/pom-core-quarkus.git</developerConnection>
        <tag>${project.version}</tag>
    </scm>
    
	<properties>
		<!-- Quarkus -->
		<quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
		<quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
		<quarkus.platform.version>3.0.1.Final</quarkus.platform.version>
		<org.jacoco.jacoco-maven-plugin.version>0.8.8</org.jacoco.jacoco-maven-plugin.version>
		<quarkus.jacoco.data-file>jacoco-quarkus.exec</quarkus.jacoco.data-file>
		<jacoco.file.name>${project.build.directory}/${quarkus.jacoco.data-file}</jacoco.file.name>
		<skipITs>true</skipITs>
	</properties>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>${quarkus.platform.group-id}</groupId>
				<artifactId>${quarkus.platform.artifact-id}</artifactId>
				<version>${quarkus.platform.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<dependencies>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-arc</artifactId>
		</dependency>
		
		<!-- Test -->
			<!-- Execution engine -->
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-junit5</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>io.quarkus</groupId>
		    <artifactId>quarkus-junit5-mockito</artifactId>
		    <scope>test</scope>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<!-- Quarkus -->
			<plugin>
				<groupId>${quarkus.platform.group-id}</groupId>
				<artifactId>quarkus-maven-plugin</artifactId>
				<version>${quarkus.platform.version}</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<goals>
							<goal>build</goal>
							<goal>generate-code</goal>
							<goal>generate-code-tests</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Compiler -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerArgs>
						<arg>-parameters</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<!-- Unit test -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<systemPropertyVariables>
						<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
						<maven.home>${maven.home}</maven.home>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<!-- Integration test -->
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<systemPropertyVariables>
								<native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
								<maven.home>${maven.home}</maven.home>
							</systemPropertyVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${org.jacoco.jacoco-maven-plugin.version}</version>
				<configuration>
					<dataFile>${jacoco.file.name}</dataFile>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>native</id>
			<activation>
				<property>
					<name>native</name>
				</property>
			</activation>
			<properties>
				<skipITs>false</skipITs>
				<quarkus.package.type>native</quarkus.package.type>
			</properties>
		</profile>
		
		<!-- Style check -->
		<!-- Activation based on propertry -->
		<profile>
			<id>code-coverage-core</id>
			<activation>
				<property>
					<name>code-coverage</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${org.jacoco.jacoco-maven-plugin.version}</version>
						<executions>
							<!-- Prepares the property pointing to the JaCoCo runtime agent which
                        	is passed as VM argument when Maven the Surefire plugin is executed. -->	
							<execution>
								<id>default-prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<exclClassLoaders>*QuarkusClassLoader</exclClassLoaders>
									<destFile>${jacoco.file.name}</destFile>
									<append>true</append>
								</configuration>
							</execution>
							
							<!-- Ensures that the code coverage report for unit tests is created
                        	after unit tests have been run. -->
		                    <execution>
		                        <id>default-report</id>
		                        <phase>test</phase>
		                        <goals>
		                            <goal>report</goal>
		                        </goals>
		                    </execution>

							<execution>
								<id>jacoco-check</id>
								<goals>
									<goal>check</goal>
								</goals>
								<phase>post-integration-test</phase>
								<configuration>
									<dataFile>${jacoco.file.name}</dataFile>
									<rules>
										<rule>
											<element>CLASS</element>
											<limits>
												<limit>
													<counter>LINE</counter>
													<value>COVEREDRATIO</value>
													<minimum>100%</minimum>
												</limit>
												<limit>
							                   		<counter>BRANCH</counter>
							                   		<value>COVEREDRATIO</value>
							                   		<minimum>100%</minimum>
							                 	</limit>
											</limits>
										</rule>
									</rules>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<destFile>${jacoco.file.name}</destFile>
							<dataFile>${jacoco.file.name}</dataFile>
						</configuration>
					</plugin>
				</plugins>
			</build>
			
			<dependencies>
				<dependency>
					<groupId>io.quarkus</groupId>
					<artifactId>quarkus-jacoco</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<!-- Activation based on file existence -->
		<profile>
			<id>code-coverage-core-file</id>
			<activation>
				<file>
					<exists>maven/profile/code-coverage</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${org.jacoco.jacoco-maven-plugin.version}</version>
						<executions>
							<!-- Prepares the property pointing to the JaCoCo runtime agent which
                        	is passed as VM argument when Maven the Surefire plugin is executed. -->	
							<execution>
								<id>default-prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<exclClassLoaders>*QuarkusClassLoader</exclClassLoaders>
									<destFile>${jacoco.file.name}</destFile>
									<append>true</append>
								</configuration>
							</execution>
							
							<!-- Ensures that the code coverage report for unit tests is created
                        	after unit tests have been run. -->
		                    <execution>
		                        <id>default-report</id>
		                        <phase>test</phase>
		                        <goals>
		                            <goal>report</goal>
		                        </goals>
		                    </execution>

							<execution>
								<id>jacoco-check</id>
								<goals>
									<goal>check</goal>
								</goals>
								<phase>post-integration-test</phase>
								<configuration>
									<dataFile>${jacoco.file.name}</dataFile>
									<rules>
										<rule>
											<element>CLASS</element>
											<limits>
												<limit>
													<counter>LINE</counter>
													<value>COVEREDRATIO</value>
													<minimum>100%</minimum>
												</limit>
												<limit>
							                   		<counter>BRANCH</counter>
							                   		<value>COVEREDRATIO</value>
							                   		<minimum>100%</minimum>
							                 	</limit>
											</limits>
										</rule>
									</rules>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<destFile>${jacoco.file.name}</destFile>
							<dataFile>${jacoco.file.name}</dataFile>
						</configuration>
					</plugin>
				</plugins>
			</build>
			
			<dependencies>
				<dependency>
					<groupId>io.quarkus</groupId>
					<artifactId>quarkus-jacoco</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>